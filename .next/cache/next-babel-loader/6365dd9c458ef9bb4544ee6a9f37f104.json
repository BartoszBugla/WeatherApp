{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\Useless.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport SVG from \"../static/svg/svg\";\nimport styled from \"styled-components\";\nconst blockSize = 150;\nconst margin = 2;\nexport const Container = styled.div.withConfig({\n  displayName: \"Useless__Container\",\n  componentId: \"sc-1ln5oi6-0\"\n})([\"color:white;margin:0 auto;\"]);\nexport const Block = styled.div.withConfig({\n  displayName: \"Useless__Block\",\n  componentId: \"sc-1ln5oi6-1\"\n})([\"float:left;text-align:center;width:\", \"px;height:\", \"px;display:flex;justify-content:center;flex-direction:column;border-radius:5px;@media (max-width:800px){width:140px;height:100px;font-size:0.7rem;}\"], blockSize + 40, blockSize);\nexport const SvgContainer = styled.div.withConfig({\n  displayName: \"Useless__SvgContainer\",\n  componentId: \"sc-1ln5oi6-2\"\n})([\"display:flex;flex-direction:column;align-items:center;text-align:center;font-size:1.2rem;*{margin:2px 5px;}svg{height:75px;width:75px;fill:white;}@media (max-width:600px){font-size:1.1rem;svg{height:30px;width:30px;fill:white;}}\"]);\n\nconst Useless = ({\n  wind,\n  sunset,\n  sunrise,\n  tz\n}) => {\n  const {\n    hour: sunriseHour,\n    min: sunriseMinute\n  } = getItems(sunrise, tz);\n  const {\n    hour: sunsetHour,\n    min: sunsetMinute\n  } = getItems(sunset, tz);\n  const sunriseTime = `${HourConverter(sunriseHour)}:${HourConverter(sunriseMinute)}`;\n  const sunsetTime = `${HourConverter(sunsetHour)}:${HourConverter(sunsetMinute)}`;\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Block, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(SvgContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Wind strenght\", __jsx(SVG, {\n    type: \"windIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), Math.round(wind * 3.6), \" km/h\")), __jsx(Block, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(SvgContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Sunrise\", __jsx(SVG, {\n    type: \"sunrise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), sunriseTime, \" am\")), __jsx(Block, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(SvgContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Sunset\", __jsx(SVG, {\n    type: \"sunset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), sunsetTime, \" am\")));\n};\n\nconst HourConverter = item => {\n  if (item < 10) return `0${item}`;else return item;\n};\n\nconst getItems = (date, timezone) => {\n  console.log(date);\n  const d = new Date(date * 1000);\n  console.log(d);\n  const utc = d.getTime() + d.getTimezoneOffset() * 60000;\n  const string = new Date(utc + 1000 * timezone);\n  let hour = string.getHours();\n  let min = string.getMinutes();\n  console.log(hour, min);\n  return {\n    hour,\n    min\n  };\n};\n\nexport default Useless;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/Useless.tsx"],"names":["React","SVG","styled","blockSize","margin","Container","div","Block","SvgContainer","Useless","wind","sunset","sunrise","tz","hour","sunriseHour","min","sunriseMinute","getItems","sunsetHour","sunsetMinute","sunriseTime","HourConverter","sunsetTime","Math","round","item","date","timezone","console","log","d","Date","utc","getTime","getTimezoneOffset","string","getHours","getMinutes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport SVG from \"../static/svg/svg\";\r\nimport styled from \"styled-components\";\r\nconst blockSize = 150;\r\nconst margin = 2;\r\nexport const Container = styled.div`\r\n    color: white;\r\n    margin: 0 auto;\r\n`;\r\nexport const Block = styled.div`\r\n    float: left;\r\n    text-align: center;\r\n    width: ${blockSize + 40}px;\r\n    height: ${blockSize}px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    /* margin: ${margin}px; */\r\n    border-radius: 5px;\r\n    @media (max-width: 800px) {\r\n        width: 140px;\r\n        height: 100px;\r\n        font-size: 0.7rem;\r\n    }\r\n`;\r\nexport const SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    font-size: 1.2rem;\r\n    * {\r\n        margin: 2px 5px;\r\n    }\r\n    svg {\r\n        height: 75px;\r\n        width: 75px;\r\n        fill: white;\r\n    }\r\n    @media (max-width: 600px) {\r\n        font-size: 1.1rem;\r\n\r\n        svg {\r\n            height: 30px;\r\n            width: 30px;\r\n            fill: white;\r\n        }\r\n    }\r\n`;\r\nconst Useless = ({ wind, sunset, sunrise, tz }) => {\r\n    const { hour: sunriseHour, min: sunriseMinute } = getItems(sunrise, tz);\r\n    const { hour: sunsetHour, min: sunsetMinute } = getItems(sunset, tz);\r\n\r\n    const sunriseTime = `${HourConverter(sunriseHour)}:${HourConverter(sunriseMinute)}`;\r\n    const sunsetTime = `${HourConverter(sunsetHour)}:${HourConverter(sunsetMinute)}`;\r\n    return (\r\n        <Container>\r\n            <Block>\r\n                <SvgContainer>\r\n                    Wind strenght\r\n                    <SVG type=\"windIcon\" />\r\n                    {Math.round(wind * 3.6)} km/h\r\n                </SvgContainer>\r\n            </Block>\r\n            <Block>\r\n                <SvgContainer>\r\n                    Sunrise\r\n                    <SVG type=\"sunrise\" />\r\n                    {sunriseTime} am\r\n                </SvgContainer>\r\n            </Block>\r\n            <Block>\r\n                <SvgContainer>\r\n                    Sunset\r\n                    <SVG type=\"sunset\" />\r\n                    {sunsetTime} am\r\n                </SvgContainer>\r\n            </Block>\r\n        </Container>\r\n    );\r\n};\r\nconst HourConverter = (item: number) => {\r\n    if (item < 10) return `0${item}`;\r\n    else return item;\r\n};\r\nconst getItems = (date: number, timezone: number) => {\r\n    console.log(date);\r\n    const d = new Date(date * 1000);\r\n    console.log(d);\r\n    const utc = d.getTime() + d.getTimezoneOffset() * 60000;\r\n    const string = new Date(utc + 1000 * timezone);\r\n    let hour = string.getHours();\r\n    let min = string.getMinutes();\r\n    console.log(hour, min);\r\n    return { hour, min };\r\n};\r\n\r\nexport default Useless;\r\n"]},"metadata":{},"sourceType":"module"}