{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\Block.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport SVG from \"../static/svg/svg\";\nvar blockSize = 180;\nvar blockSizeS = 100;\nvar margin = 10;\nvar Cont = styled.a.withConfig({\n  displayName: \"Block__Cont\",\n  componentId: \"bq5cpa-0\"\n})([\"float:left;text-align:center;width:\", \"px;height:\", \"px;display:flex;color:white;*{margin:4px;}\", \" justify-content:center;flex-direction:column;margin:\", \"px;border-radius:5px;&:focus{transform:scale(1.1);border-radius:15px;outline:none;transition:all 0.4s ease;}@media (max-width:800px){width:\", \"px;height:\", \"px;font-size:0.7rem;}&:hover{-webkit-filter:brightness(120%);transition:all 1s ease;}\"], blockSize + 40, blockSize, function (props) {\n  if (props.colors) {\n    if (props.colors[2]) return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%, \").concat(props.colors[1], \" 50.52%, \").concat(props.colors[2], \" 100%);\");else return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%,  \").concat(props.colors[1], \" 100%);\");\n  }\n}, margin, blockSizeS + 10, blockSizeS);\n_c = Cont;\nvar SvgContainer = styled.div.withConfig({\n  displayName: \"Block__SvgContainer\",\n  componentId: \"bq5cpa-1\"\n})([\"display:flex;flex-direction:row;align-items:center;text-align:center;justify-content:center;*{margin:2px 5px;}svg{height:40px;width:40px;fill:white;}\"]);\n_c2 = SvgContainer;\nvar apikey1 = process.env.API_KEY_1;\nvar apikey2 = process.env.API_KEY_2;\nvar initialState = {\n  city: \"\",\n  main: {\n    temp: 0\n  },\n  weather: [{\n    description: \"\"\n  }]\n};\n\nvar Block = function Block(_ref) {\n  _s();\n\n  var city = _ref.city;\n\n  var _useState = useState(initialState),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    var fetchCoords = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, fetchedCoords, loc;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=\".concat(apikey1, \"&searchtext=\").concat(city);\n                _context.next = 3;\n                return axios(url);\n\n              case 3:\n                fetchedCoords = _context.sent;\n                loc = fetchedCoords.data.Response.View[0].Result[0].Location;\n                return _context.abrupt(\"return\", loc.DisplayPosition);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchCoords() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item) {\n        var url2, fetchedData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url2 = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(item.Latitude, \"&lon=\").concat(item.Longitude, \"&appid=\").concat(apikey2);\n                _context2.next = 3;\n                return axios(url2);\n\n              case 3:\n                fetchedData = _context2.sent;\n                return _context2.abrupt(\"return\", fetchedData.data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fetchData(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var fetch = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var item, weather;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetchCoords();\n\n              case 2:\n                item = _context3.sent;\n                _context3.next = 5;\n                return fetchData(item);\n\n              case 5:\n                weather = _context3.sent;\n                setData(weather);\n                setLoading(false);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function fetch() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    fetch();\n  }, []);\n  var temperature = Math.round(data.main.temp - 273.15);\n\n  var _ConvertSkies = ConvertSkies(data.weather[0].description, temperature),\n      colors = _ConvertSkies.colors,\n      name = _ConvertSkies.name,\n      icon = _ConvertSkies.icon;\n\n  var url = \"/result?cityName=\".concat(city);\n  if (isLoading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 27\n    }\n  }, \"Loading...\");\n  return __jsx(Link, {\n    href: url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(Cont, {\n    href: \"#\",\n    colors: colors,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      textTransform: \"capitalize\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, city), __jsx(SvgContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(SVG, {\n    type: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, temperature, \"\\xB0\")), __jsx(\"p\", {\n    style: {\n      color: \"lightgrey\",\n      textTransform: \"capitalize\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \" \", data.weather[0].description)));\n};\n\n_s(Block, \"t5vJhFPyL3NfCyRkJf7A+dn4+3k=\");\n\n_c3 = Block;\nexport default Block;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cont\");\n$RefreshReg$(_c2, \"SvgContainer\");\n$RefreshReg$(_c3, \"Block\");","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/Block.tsx"],"names":["React","useEffect","useState","ConvertSkies","styled","Link","axios","SVG","blockSize","blockSizeS","margin","Cont","a","props","colors","SvgContainer","div","apikey1","process","env","API_KEY_1","apikey2","API_KEY_2","initialState","city","main","temp","weather","description","Block","data","setData","isLoading","setLoading","fetchCoords","url","fetchedCoords","loc","Response","View","Result","Location","DisplayPosition","fetchData","item","url2","Latitude","Longitude","fetchedData","fetch","temperature","Math","round","name","icon","textTransform","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\nimport styled from \"styled-components\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport SVG from \"../static/svg/svg\";\r\nconst blockSize = 180;\r\nconst blockSizeS = 100;\r\nconst margin = 10;\r\nconst Cont = styled.a`\r\n    float: left;\r\n    text-align: center;\r\n    width: ${blockSize + 40}px;\r\n    height: ${blockSize}px;\r\n    display: flex;\r\n    color: white;\r\n    * {\r\n        margin: 4px;\r\n    }\r\n\r\n    ${(props) => {\r\n        if (props.colors) {\r\n            if (props.colors[2])\r\n                return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;\r\n            else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\r\n        }\r\n    }}\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: ${margin}px;\r\n    border-radius: 5px;\r\n    &:focus {\r\n        transform: scale(1.1);\r\n        border-radius: 15px;\r\n        outline: none;\r\n        transition: all 0.4s ease;\r\n    }\r\n    @media (max-width: 800px) {\r\n        width: ${blockSizeS + 10}px;\r\n        height: ${blockSizeS}px;\r\n        font-size: 0.7rem;\r\n    }\r\n    &:hover {\r\n        -webkit-filter: brightness(120%);\r\n        transition: all 1s ease;\r\n    }\r\n`;\r\nconst SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n    * {\r\n        margin: 2px 5px;\r\n    }\r\n    svg {\r\n        height: 40px;\r\n        width: 40px;\r\n        fill: white;\r\n    }\r\n`;\r\nconst apikey1 = process.env.API_KEY_1;\r\nconst apikey2 = process.env.API_KEY_2;\r\nconst initialState = {\r\n    city: \"\",\r\n    main: { temp: 0 },\r\n    weather: [{ description: \"\" }],\r\n};\r\n\r\nconst Block = ({ city }) => {\r\n    const [data, setData] = useState(initialState);\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        const fetchCoords = async () => {\r\n            const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=${apikey1}&searchtext=${city}`;\r\n            const fetchedCoords = await axios(url);\r\n            const loc = fetchedCoords.data.Response.View[0].Result[0].Location;\r\n            return loc.DisplayPosition;\r\n        };\r\n        const fetchData = async (item) => {\r\n            const url2 = `http://api.openweathermap.org/data/2.5/weather?lat=${item.Latitude}&lon=${item.Longitude}&appid=${apikey2}`;\r\n            const fetchedData = await axios(url2);\r\n            return fetchedData.data;\r\n        };\r\n        const fetch = async () => {\r\n            const item = await fetchCoords();\r\n            const weather = await fetchData(item);\r\n            setData(weather);\r\n            setLoading(false);\r\n        };\r\n        fetch();\r\n    }, []);\r\n    const temperature = Math.round(data.main.temp - 273.15);\r\n    const { colors, name, icon } = ConvertSkies(data.weather[0].description, temperature);\r\n    const url = `/result?cityName=${city}`;\r\n    if (isLoading) return <div>Loading...</div>;\r\n    return (\r\n        <Link href={url}>\r\n            <Cont href=\"#\" colors={colors}>\r\n                <p style={{ textTransform: \"capitalize\" }}>{city}</p>\r\n                <SvgContainer>\r\n                    <SVG type={icon} />\r\n                    <p>{temperature}°</p>\r\n                </SvgContainer>\r\n                <p style={{ color: \"lightgrey\", textTransform: \"capitalize\" }}> {data.weather[0].description}</p>\r\n            </Cont>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Block;\r\n"]},"metadata":{},"sourceType":"module"}