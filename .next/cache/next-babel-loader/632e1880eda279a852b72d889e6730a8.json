{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst index = ({\n  data\n}) => {\n  console.log(data);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }\n  }, \"Insert City\"), __jsx(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \" \", data.name));\n};\n\nexport async function getServerSideProps(ctx) {\n  const url = \"https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=FI0ZPYdRRTTdhdTKQwENNV-OAS4OA13qj97BqtkoU2M&searchtext=Berlin\";\n  const fetchedCoords = await (await fetch(url)).json();\n  const {\n    Latitude,\n    Longitude\n  } = fetchedCoords.Response.View[0].Result[0].Location.DisplayPosition;\n  console.log(Latitude, Longitude); ////////////////////////////////////\n\n  const url2 = `https://api.openweathermap.org/data/2.5/weather?lat=${Latitude}&lon=${Longitude}&appid=ba590e34cd2c5e9d9bfa284e3f0b6a6e`;\n  const data = await (await fetch(url2)).json();\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/pages/index.tsx"],"names":["React","fetch","index","data","console","log","name","getServerSideProps","ctx","url","fetchedCoords","json","Latitude","Longitude","Response","View","Result","Location","DisplayPosition","url2","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,IAAI,CAACG,IAAZ,CANJ,CADJ;AAUH,CAZD;;AAcA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAuC;AAC1C,QAAMC,GAAG,GACL,uHADJ;AAGA,QAAMC,aAAa,GAAG,MAAM,CAAC,MAAMT,KAAK,CAACQ,GAAD,CAAZ,EAAmBE,IAAnB,EAA5B;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BH,aAAa,CAACI,QAAd,CAAuBC,IAAvB,CAA4B,CAA5B,EAA+BC,MAA/B,CAAsC,CAAtC,EAAyCC,QAAzC,CAAkDC,eAAlF;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ,EAAsBC,SAAtB,EAN0C,CAQ1C;;AAEA,QAAMM,IAAI,GAAI,uDAAsDP,QAAS,QAAOC,SAAU,yCAA9F;AACA,QAAMV,IAAI,GAAG,MAAM,CAAC,MAAMF,KAAK,CAACkB,IAAD,CAAZ,EAAoBR,IAApB,EAAnB;AACA,SAAO;AAAES,IAAAA,KAAK,EAAE;AAAEjB,MAAAA;AAAF;AAAT,GAAP;AACH;AAED,eAAeD,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nconst index = ({ data }) => {\r\n    console.log(data);\r\n    return (\r\n        <div>\r\n            <label>\r\n                <p>Insert City</p>\r\n                <input></input>\r\n            </label>\r\n\r\n            <div> {data.name}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    const url =\r\n        \"https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=FI0ZPYdRRTTdhdTKQwENNV-OAS4OA13qj97BqtkoU2M&searchtext=Berlin\";\r\n\r\n    const fetchedCoords = await (await fetch(url)).json();\r\n    const { Latitude, Longitude } = fetchedCoords.Response.View[0].Result[0].Location.DisplayPosition;\r\n    console.log(Latitude, Longitude);\r\n\r\n    ////////////////////////////////////\r\n\r\n    const url2 = `https://api.openweathermap.org/data/2.5/weather?lat=${Latitude}&lon=${Longitude}&appid=ba590e34cd2c5e9d9bfa284e3f0b6a6e`;\r\n    const data = await (await fetch(url2)).json();\r\n    return { props: { data } };\r\n}\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}