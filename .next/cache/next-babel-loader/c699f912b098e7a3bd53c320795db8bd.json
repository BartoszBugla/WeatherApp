{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\Block.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport SVG from \"../static/svg/svg\";\nconst blockSize = 180;\nconst blockSizeS = 110;\nconst margin = 10;\nconst Cont = styled.a.withConfig({\n  displayName: \"Block__Cont\",\n  componentId: \"bq5cpa-0\"\n})([\"float:left;text-align:center;width:\", \"px;height:\", \"px;display:flex;color:white;box-shadow:0px 0px 10px rgba(0,0,0,0.25);*{margin:4px;}\", \" justify-content:center;flex-direction:column;margin:\", \"px;border-radius:8px;&:focus,&:hover{transform:scale(1.1);border-radius:15px;outline:none;transition:all 0.4s ease;}@media (max-width:800px){width:\", \"px;height:\", \"px;font-size:0.7rem;*{margin:1px;}}\"], blockSize + 40, blockSize, props => {\n  if (props.colors) {\n    if (props.colors[2]) return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\n  }\n}, margin, blockSizeS + 15, blockSizeS);\nconst SvgContainer = styled.div.withConfig({\n  displayName: \"Block__SvgContainer\",\n  componentId: \"bq5cpa-1\"\n})([\"display:flex;flex-direction:row;align-items:center;text-align:center;justify-content:center;*{margin:2px 5px;}svg{height:40px;width:40px;fill:white;}\"]);\nconst CityName = styled.p.withConfig({\n  displayName: \"Block__CityName\",\n  componentId: \"bq5cpa-2\"\n})([\"font-size:1.6rem;@media (max-width:800px){font-size:1rem;}\"]);\nconst Temp = styled.p.withConfig({\n  displayName: \"Block__Temp\",\n  componentId: \"bq5cpa-3\"\n})([\"font-size:2rem;\"]);\nconst apikey1 = process.env.API_KEY_1;\nconst apikey2 = process.env.API_KEY_2;\nconst initialState = {\n  city: \"\",\n  main: {\n    temp: 0\n  },\n  weather: [{\n    description: \"\"\n  }]\n};\n\nconst Block = ({\n  city\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState(initialState);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    const fetchCoords = async () => {\n      const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=${apikey1}&searchtext=${city}`;\n      const fetchedCoords = await axios(url);\n      const loc = fetchedCoords.data.Response.View[0].Result[0].Location;\n      return loc.DisplayPosition;\n    };\n\n    const fetchData = async item => {\n      const url2 = `http://api.openweathermap.org/data/2.5/weather?lat=${item.Latitude}&lon=${item.Longitude}&appid=${apikey2}`;\n      const fetchedData = await axios(url2);\n      return fetchedData.data;\n    };\n\n    const fetch = async () => {\n      const item = await fetchCoords();\n      const weather = await fetchData(item);\n      setData(weather);\n      setLoading(false);\n    };\n\n    fetch();\n  }, []);\n  const temperature = Math.round(data.main.temp - 273.15);\n  const {\n    colors,\n    name,\n    icon\n  } = ConvertSkies(data.weather[0].description, temperature);\n  const url = `/result?cityName=${city}`;\n  if (isLoading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 27\n    }\n  }, \"Loading...\");\n  return __jsx(Link, {\n    href: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(Cont, {\n    href: \"#\",\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(CityName, {\n    style: {\n      textTransform: \"capitalize\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, city), __jsx(SvgContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, __jsx(SVG, {\n    type: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), __jsx(Temp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, temperature, \"\\xB0\")), __jsx(\"p\", {\n    style: {\n      color: \"lightgrey\",\n      textTransform: \"capitalize\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \" \", data.weather[0].description)));\n};\n\nexport default Block;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/Block.tsx"],"names":["React","useEffect","useState","ConvertSkies","styled","Link","axios","SVG","blockSize","blockSizeS","margin","Cont","a","props","colors","SvgContainer","div","CityName","p","Temp","apikey1","process","env","API_KEY_1","apikey2","API_KEY_2","initialState","city","main","temp","weather","description","Block","data","setData","isLoading","setLoading","fetchCoords","url","fetchedCoords","loc","Response","View","Result","Location","DisplayPosition","fetchData","item","url2","Latitude","Longitude","fetchedData","fetch","temperature","Math","round","name","icon","textTransform","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\nimport styled from \"styled-components\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport SVG from \"../static/svg/svg\";\r\nconst blockSize = 180;\r\nconst blockSizeS = 110;\r\nconst margin = 10;\r\nconst Cont = styled.a`\r\n    float: left;\r\n    text-align: center;\r\n    width: ${blockSize + 40}px;\r\n    height: ${blockSize}px;\r\n    display: flex;\r\n    color: white;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.25);\r\n    * {\r\n        margin: 4px;\r\n    }\r\n\r\n    ${(props) => {\r\n        if (props.colors) {\r\n            if (props.colors[2])\r\n                return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;\r\n            else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\r\n        }\r\n    }}\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: ${margin}px;\r\n    border-radius: 8px;\r\n    &:focus,\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        border-radius: 15px;\r\n        outline: none;\r\n        transition: all 0.4s ease;\r\n        /* -webkit-filter: brightness(110%); */\r\n    }\r\n    @media (max-width: 800px) {\r\n        width: ${blockSizeS + 15}px;\r\n        height: ${blockSizeS}px;\r\n        font-size: 0.7rem;\r\n        * {\r\n            margin: 1px;\r\n        }\r\n    }\r\n`;\r\nconst SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n    * {\r\n        margin: 2px 5px;\r\n    }\r\n    svg {\r\n        height: 40px;\r\n        width: 40px;\r\n        fill: white;\r\n    }\r\n`;\r\nconst CityName = styled.p`\r\n    font-size: 1.6rem;\r\n    @media (max-width: 800px) {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\nconst Temp = styled.p`\r\n    font-size: 2rem;\r\n`;\r\nconst apikey1 = process.env.API_KEY_1;\r\nconst apikey2 = process.env.API_KEY_2;\r\nconst initialState = {\r\n    city: \"\",\r\n    main: { temp: 0 },\r\n    weather: [{ description: \"\" }],\r\n};\r\n\r\nconst Block = ({ city }) => {\r\n    const [data, setData] = useState(initialState);\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        const fetchCoords = async () => {\r\n            const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=${apikey1}&searchtext=${city}`;\r\n            const fetchedCoords = await axios(url);\r\n            const loc = fetchedCoords.data.Response.View[0].Result[0].Location;\r\n            return loc.DisplayPosition;\r\n        };\r\n        const fetchData = async (item) => {\r\n            const url2 = `http://api.openweathermap.org/data/2.5/weather?lat=${item.Latitude}&lon=${item.Longitude}&appid=${apikey2}`;\r\n            const fetchedData = await axios(url2);\r\n            return fetchedData.data;\r\n        };\r\n        const fetch = async () => {\r\n            const item = await fetchCoords();\r\n            const weather = await fetchData(item);\r\n            setData(weather);\r\n            setLoading(false);\r\n        };\r\n        fetch();\r\n    }, []);\r\n    const temperature = Math.round(data.main.temp - 273.15);\r\n    const { colors, name, icon } = ConvertSkies(data.weather[0].description, temperature);\r\n    const url = `/result?cityName=${city}`;\r\n    if (isLoading) return <div>Loading...</div>;\r\n    return (\r\n        <Link href={url}>\r\n            <Cont href=\"#\" colors={colors}>\r\n                <CityName style={{ textTransform: \"capitalize\" }}>{city}</CityName>\r\n                <SvgContainer>\r\n                    <SVG type={icon} />\r\n                    <Temp>{temperature}°</Temp>\r\n                </SvgContainer>\r\n                <p style={{ color: \"lightgrey\", textTransform: \"capitalize\" }}> {data.weather[0].description}</p>\r\n            </Cont>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Block;\r\n"]},"metadata":{},"sourceType":"module"}