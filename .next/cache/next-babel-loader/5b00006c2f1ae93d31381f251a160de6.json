{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Search from \"../components/Search\";\nimport FavouriteCities from \"../components/FavouriteCities\";\n\nvar index = function index(_ref) {\n  var data = _ref.data;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(Search, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }), __jsx(FavouriteCities, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }), __jsx(FavouriteCities, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar f = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(array) {\n    var _i, _array, city, url, fetchedCoords, loc, cityName, _loc$DisplayPosition, Latitude, Longitude, url2, weather;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _i = 0, _array = array = [];\n\n          case 1:\n            if (!(_i < _array.length)) {\n              _context.next = 24;\n              break;\n            }\n\n            city = _array[_i];\n            url = \"https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=\".concat(apikey1, \"&searchtext=\").concat(city);\n            _context.next = 6;\n            return fetch(url);\n\n          case 6:\n            _context.next = 8;\n            return _context.sent.json();\n\n          case 8:\n            fetchedCoords = _context.sent;\n\n            if (!(fetchedCoords.Response.View[0] == undefined)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              props: {\n                error: \"oops\"\n              }\n            });\n\n          case 11:\n            loc = fetchedCoords.Response.View[0].Result[0].Location;\n            cityName = loc.Address.District ? loc.Address.District : loc.Address.City;\n            _loc$DisplayPosition = loc.DisplayPosition, Latitude = _loc$DisplayPosition.Latitude, Longitude = _loc$DisplayPosition.Longitude;\n            url2 = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(Latitude, \"&lon=\").concat(Longitude, \"&appid=\").concat(apikey2, \"\\n    \");\n            _context.next = 17;\n            return fetch(url2);\n\n          case 17:\n            _context.next = 19;\n            return _context.sent.json();\n\n          case 19:\n            weather = _context.sent;\n            array.push({\n              weather: weather,\n              city: cityName\n            });\n\n          case 21:\n            _i++;\n            _context.next = 1;\n            break;\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function f(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport var __N_SSP = true;\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/pages/index.tsx"],"names":["React","Search","FavouriteCities","index","data","f","array","city","url","apikey1","fetch","json","fetchedCoords","Response","View","undefined","props","error","loc","Result","Location","cityName","Address","District","City","DisplayPosition","Latitude","Longitude","url2","apikey2","weather","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACxB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CARD;;AAmBA,IAAMC,CAAC;AAAA,uEAAG,iBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACYA,KAAK,GAAG,EADpB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACGC,YAAAA,IADH;AAEIC,YAAAA,GAFJ,qEAEqEC,OAFrE,yBAE2FF,IAF3F;AAAA;AAAA,mBAGiCG,KAAK,CAACF,GAAD,CAHtC;;AAAA;AAAA;AAAA,iCAG6CG,IAH7C;;AAAA;AAGIC,YAAAA,aAHJ;;AAAA,kBAIEA,aAAa,CAACC,QAAd,CAAuBC,IAAvB,CAA4B,CAA5B,KAAkCC,SAJpC;AAAA;AAAA;AAAA;;AAAA,6CAKS;AACHC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,KAAK,EAAE;AADJ;AADJ,aALT;;AAAA;AAWIC,YAAAA,GAXJ,GAWUN,aAAa,CAACC,QAAd,CAAuBC,IAAvB,CAA4B,CAA5B,EAA+BK,MAA/B,CAAsC,CAAtC,EAAyCC,QAXnD;AAYIC,YAAAA,QAZJ,GAYeH,GAAG,CAACI,OAAJ,CAAYC,QAAZ,GAAuBL,GAAG,CAACI,OAAJ,CAAYC,QAAnC,GAA8CL,GAAG,CAACI,OAAJ,CAAYE,IAZzE;AAAA,mCAa8BN,GAAG,CAACO,eAblC,EAaMC,QAbN,wBAaMA,QAbN,EAagBC,SAbhB,wBAagBA,SAbhB;AAcIC,YAAAA,IAdJ,gEAciEF,QAdjE,kBAciFC,SAdjF,oBAcoGE,OAdpG;AAAA;AAAA,mBAiB2BnB,KAAK,CAACkB,IAAD,CAjBhC;;AAAA;AAAA;AAAA,iCAiBwCjB,IAjBxC;;AAAA;AAiBImB,YAAAA,OAjBJ;AAmBFxB,YAAAA,KAAK,CAACyB,IAAN,CAAW;AAAED,cAAAA,OAAO,EAAEA,OAAX;AAAoBvB,cAAAA,IAAI,EAAEc;AAA1B,aAAX;;AAnBE;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAADhB,CAAC;AAAA;AAAA;AAAA,GAAP;;;AAsBA,eAAeF,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport FavouriteCities from \"../components/FavouriteCities\";\r\nconst index = ({ data }) => {\r\n    return (\r\n        <div>\r\n            <Search />\r\n            <FavouriteCities data={data} />\r\n            <FavouriteCities data={data} />\r\n        </div>\r\n    );\r\n};\r\nexport async function getServerSideProps(ctx) {\r\n    const favouriteCities = [\"rogow\", \"moskwa\", \"New York\", \"las palmas\", \"paryz\", \" ankara\", \"gorzyce\"];\r\n    const popularCities = [\"rogow\", \"moskwa\", \"New York\", \"las palmas\", \"paryz\", \" ankara\", \"gorzyce\"];\r\n    const apikey1 = process.env.API_KEY_1;\r\n    const apikey2 = process.env.API_KEY_2;\r\n    const liked = [];\r\n    const popular = [];\r\n\r\n    return { props: { data: liked, popular } };\r\n}\r\nconst f = async (array) => {\r\n    for (let city of (array = [])) {\r\n        const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=${apikey1}&searchtext=${city}`;\r\n        const fetchedCoords = await (await fetch(url)).json();\r\n        if (fetchedCoords.Response.View[0] == undefined) {\r\n            return {\r\n                props: {\r\n                    error: \"oops\",\r\n                },\r\n            };\r\n        }\r\n        const loc = fetchedCoords.Response.View[0].Result[0].Location;\r\n        const cityName = loc.Address.District ? loc.Address.District : loc.Address.City;\r\n        const { Latitude, Longitude } = loc.DisplayPosition;\r\n        const url2 = `http://api.openweathermap.org/data/2.5/weather?lat=${Latitude}&lon=${Longitude}&appid=${apikey2}\r\n    `;\r\n\r\n        const weather = await (await fetch(url2)).json();\r\n\r\n        array.push({ weather: weather, city: cityName });\r\n    }\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}