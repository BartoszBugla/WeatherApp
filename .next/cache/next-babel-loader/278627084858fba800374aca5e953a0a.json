{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport Search from \"../components/Search\";\nimport Result from \"../components/WeatherBox\";\nimport { ConvertDate } from \"../customF/ConvertDate\";\nimport Forecast from \"../components/Forecast\";\nimport Useless from \"../components/Useless\";\nconst Container = styled.div.withConfig({\n  displayName: \"result__Container\",\n  componentId: \"sc-1jcwjlt-0\"\n})([\"display:flex;flex-direction:column;height:100vh;max-width:100vw;\"]);\n\nconst result = ({\n  data,\n  city,\n  error,\n  forecast,\n  timezone\n}) => {\n  if (error) return __jsx(\"div\", null, \"You passed Wrong localization\");\n  const temperature = Math.round(data.temp - 273.15);\n  const sky = data.weather[0].description;\n  const date = ConvertDate(data.dt);\n  return __jsx(Container, null, __jsx(Search, null), __jsx(Result, {\n    date: date,\n    temperature: temperature,\n    sky: sky,\n    city: city\n  }, __jsx(Useless, {\n    wind: data.wind_speed,\n    sunrise: data.sunrise,\n    sunset: data.sunset\n  }), __jsx(Forecast, {\n    forecast: forecast\n  })));\n};\n\nexport async function getServerSideProps(ctx) {\n  const {\n    query\n  } = ctx;\n  const queryCity = query.cityName ? query.cityName : \"Berlin\";\n  const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=FI0ZPYdRRTTdhdTKQwENNV-OAS4OA13qj97BqtkoU2M&searchtext=${queryCity}`;\n  const fetchedCoords = await (await fetch(url)).json();\n\n  if (fetchedCoords.Response.View[0] == undefined) {\n    return {\n      props: {\n        error: \"oops\"\n      }\n    };\n  }\n\n  const {\n    Latitude,\n    Longitude\n  } = fetchedCoords.Response.View[0].Result[0].Location.DisplayPosition;\n  const city = fetchedCoords.Response.View[0].Result[0].Location.Address.District ? fetchedCoords.Response.View[0].Result[0].Location.Address.District : fetchedCoords.Response.View[0].Result[0].Location.Address.City;\n  console.log(fetchedCoords.Response.View[0]); // ////////////////////////////////////`\n\n  const url2 = `    https://api.openweathermap.org/data/2.5/onecall?lat=${Latitude}&lon=${Longitude}&\n    exclude=current,daily&appid=ba590e34cd2c5e9d9bfa284e3f0b6a6e`;\n  const data = await (await fetch(url2)).json();\n  const current = data.current;\n  const forecast = data.daily;\n  const timezone = data.timezone_offset;\n  return {\n    props: {\n      data: current,\n      forecast,\n      city,\n      timezone\n    }\n  };\n}\nexport default result;","map":null,"metadata":{},"sourceType":"module"}