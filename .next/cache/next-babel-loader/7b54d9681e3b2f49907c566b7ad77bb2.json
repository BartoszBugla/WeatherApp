{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Search from \"../components/Search\";\nimport FavouriteCities from \"../components/FavouriteCities\";\n\nvar index = function index(_ref) {\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(Search, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }), __jsx(FavouriteCities, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }), __jsx(FavouriteCities, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport var __N_SSP = true;\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/pages/index.tsx"],"names":["React","Search","FavouriteCities","index","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmB;AAAA,uBAAhBC,IAAgB;AAAA,MAAhBA,IAAgB,0BAAT,EAAS;AAC7B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CARD;;;AA6CA,eAAeD,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport FavouriteCities from \"../components/FavouriteCities\";\r\nconst index = ({ data = [] }) => {\r\n    return (\r\n        <div>\r\n            <Search />\r\n            <FavouriteCities data={data} />\r\n            <FavouriteCities data={data} />\r\n        </div>\r\n    );\r\n};\r\nexport async function getServerSideProps(ctx) {\r\n    const favouriteCities = [\"rogow\", \"moskwa\", \"New York\", \"las palmas\", \"paryz\", \" ankara\", \"gorzyce\"];\r\n    const popularCities = [\"rogow\", \"moskwa\", \"New York\", \"las palmas\", \"paryz\", \" ankara\", \"gorzyce\"];\r\n\r\n    const liked = await f(favouriteCities);\r\n    const popular = await f(popularCities);\r\n    // console.log(liked);\r\n    return { props: {} };\r\n}\r\nconst f = async (array) => {\r\n    const apikey1 = process.env.API_KEY_1;\r\n    const apikey2 = process.env.API_KEY_2;\r\n    const returned = [];\r\n    for (let city of (array = [])) {\r\n        const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=${apikey1}&searchtext=${city}`;\r\n        const fetchedCoords = await (await fetch(url)).json();\r\n        if (fetchedCoords.Response.View[0] == undefined) {\r\n            return {\r\n                props: {\r\n                    error: \"oops\",\r\n                },\r\n            };\r\n        }\r\n        const loc = fetchedCoords.Response.View[0].Result[0].Location;\r\n        const cityName = loc.Address.District ? loc.Address.District : loc.Address.City;\r\n        const { Latitude, Longitude } = loc.DisplayPosition;\r\n        const url2 = `http://api.openweathermap.org/data/2.5/weather?lat=${Latitude}&lon=${Longitude}&appid=${apikey2}\r\n    `;\r\n\r\n        const weather = await (await fetch(url2)).json();\r\n\r\n        returned.push({ weather: weather, city: cityName });\r\n        console.log(returned);\r\n        return returned;\r\n    }\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}