{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\NewForecast.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport getItems from \"../customF/ConvertDate\";\nimport SVG from \"../static/svg/svg\";\nvar blockSize = 140;\nvar margin = 2;\nvar Container = styled.div.withConfig({\n  displayName: \"NewForecast__Container\",\n  componentId: \"t1mylj-0\"\n})([\"width:100%;color:white;background-color:white;padding:10px 0;\"]);\n_c = Container;\nvar Scroll = styled.section.withConfig({\n  displayName: \"NewForecast__Scroll\",\n  componentId: \"t1mylj-1\"\n})([\"margin:0 auto;max-height:200px;overflow-x:scroll;overflow-y:hidden;display:grid;grid-template-columns:repeat(8,1fr);width:\", \"px;overflow:hidden;@media (max-width:\", \"px){width:100vw;overflow-x:scroll;}\"], 8 * blockSize + margin * 16 + 1 * 16, 8 * blockSize + margin * 16 + 1 * 16);\n_c2 = Scroll;\nexport var Block = styled.div.withConfig({\n  displayName: \"NewForecast__Block\",\n  componentId: \"t1mylj-2\"\n})([\"float:left;text-align:center;width:\", \"px;height:\", \"px;display:flex;\", \" justify-content:center;flex-direction:column;border-radius:5px;@media (max-width:800px){width:100px;height:100px;font-size:0.7rem;}\"], blockSize, blockSize, function (props) {\n  if (props.colors) {\n    if (props.colors[2]) return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%, \").concat(props.colors[1], \" 50.52%, \").concat(props.colors[2], \" 100%);\");else return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%,  \").concat(props.colors[1], \" 100%);\");\n  }\n});\n_c3 = Block;\nvar SvgContainer = styled.div.withConfig({\n  displayName: \"NewForecast__SvgContainer\",\n  componentId: \"t1mylj-3\"\n})([\"display:flex;flex-direction:row;align-items:center;text-align:center;justify-content:center;*{margin:2px 5px;}svg{height:40px;width:40px;fill:white;}\"]);\n_c4 = SvgContainer;\n\nvar NewForecast = function NewForecast(_ref) {\n  var forecast = _ref.forecast;\n  var items = forecast.map(function (item, index) {\n    var sky = item.weather[0].description;\n    var temperature = Math.round(item.temp.day - 273.15);\n\n    var _ConvertSkies = ConvertSkies(sky, temperature),\n        colors = _ConvertSkies.colors,\n        name = _ConvertSkies.name,\n        icon = _ConvertSkies.icon;\n\n    var _getItems = getItems(item.dt),\n        weekday = _getItems.weekday;\n\n    return __jsx(Block, {\n      key: index,\n      colors: colors,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, weekday), __jsx(SvgContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, __jsx(SVG, {\n      type: icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, temperature, \"\\xB0\")), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \" \", sky));\n  });\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Scroll, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, items));\n};\n\n_c5 = NewForecast;\nexport default NewForecast;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Scroll\");\n$RefreshReg$(_c3, \"Block\");\n$RefreshReg$(_c4, \"SvgContainer\");\n$RefreshReg$(_c5, \"NewForecast\");","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/NewForecast.tsx"],"names":["React","styled","ConvertSkies","getItems","SVG","blockSize","margin","Container","div","Scroll","section","Block","props","colors","SvgContainer","NewForecast","forecast","items","map","item","index","sky","weather","description","temperature","Math","round","temp","day","name","icon","dt","weekday"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\nimport getItems from \"../customF/ConvertDate\";\r\nimport SVG from \"../static/svg/svg\";\r\nconst blockSize = 140;\r\nconst margin = 2;\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    color: white;\r\n    background-color: white;\r\n    padding: 10px 0;\r\n`;\r\nconst Scroll = styled.section`\r\n    margin: 0 auto;\r\n    max-height: 200px;\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr);\r\n    width: ${8 * blockSize + margin * 16 + 1 * 16}px;\r\n    overflow: hidden;\r\n    @media (max-width: ${8 * blockSize + margin * 16 + 1 * 16}px) {\r\n        width: 100vw;\r\n        overflow-x: scroll;\r\n    }\r\n`;\r\nexport const Block = styled.div`\r\n    float: left;\r\n    text-align: center;\r\n    width: ${blockSize}px;\r\n    height: ${blockSize}px;\r\n    display: flex;\r\n    ${(props) => {\r\n        if (props.colors) {\r\n            if (props.colors[2])\r\n                return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;\r\n            else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\r\n        }\r\n    }}\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    /* margin: ${margin}px; */\r\n    border-radius: 5px;\r\n    @media (max-width: 800px) {\r\n        width: 100px;\r\n        height: 100px;\r\n        font-size: 0.7rem;\r\n    }\r\n`;\r\nconst SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n    * {\r\n        margin: 2px 5px;\r\n    }\r\n    svg {\r\n        height: 40px;\r\n        width: 40px;\r\n        fill: white;\r\n    }\r\n`;\r\nconst NewForecast = ({ forecast }) => {\r\n    const items = forecast.map((item, index) => {\r\n        const sky = item.weather[0].description;\r\n        const temperature = Math.round(item.temp.day - 273.15);\r\n        const { colors, name, icon } = ConvertSkies(sky, temperature);\r\n        const { weekday } = getItems(item.dt);\r\n\r\n        return (\r\n            <Block key={index} colors={colors}>\r\n                <p>{weekday}</p>\r\n                <SvgContainer>\r\n                    <SVG type={icon} />\r\n                    <p>{temperature}Â°</p>\r\n                </SvgContainer>\r\n\r\n                <p> {sky}</p>\r\n            </Block>\r\n        );\r\n    });\r\n    return (\r\n        <Container>\r\n            <Scroll>{items}</Scroll>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewForecast;\r\n"]},"metadata":{},"sourceType":"module"}