{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\Useless.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport SVG from \"../static/svg/svg\";\nimport styled from \"styled-components\";\nvar blockSize = 150;\nvar margin = 2;\nexport var Container = styled.div.withConfig({\n  displayName: \"Useless__Container\",\n  componentId: \"sc-1ln5oi6-0\"\n})([\"color:white;margin:0 auto;justify-content:center;align-items:center;\"]);\n_c = Container;\nexport var Block = styled.div.withConfig({\n  displayName: \"Useless__Block\",\n  componentId: \"sc-1ln5oi6-1\"\n})([\"float:left;text-align:center;width:\", \"px;height:\", \"px;display:flex;justify-content:center;flex-direction:column;border-radius:5px;@media (max-width:800px){width:140px;height:100px;font-size:0.7rem;}\"], blockSize + 40, blockSize);\n_c2 = Block;\nexport var SvgContainer = styled.div.withConfig({\n  displayName: \"Useless__SvgContainer\",\n  componentId: \"sc-1ln5oi6-2\"\n})([\"display:flex;flex-direction:column;align-items:center;text-align:center;font-size:1.2rem;*{margin:2px 5px;}svg{height:75px;width:75px;fill:white;}@media (max-width:600px){font-size:1.1rem;svg{height:30px;width:30px;fill:white;}}\"]);\n_c3 = SvgContainer;\n\nvar Useless = function Useless(_ref) {\n  var wind = _ref.wind,\n      sunset = _ref.sunset,\n      sunrise = _ref.sunrise,\n      tz = _ref.tz;\n\n  var _getItems = getItems(sunrise, tz),\n      sunriseHour = _getItems.hour,\n      sunriseMinute = _getItems.min;\n\n  var _getItems2 = getItems(sunset, tz),\n      sunsetHour = _getItems2.hour,\n      sunsetMinute = _getItems2.min;\n\n  var sunriseTime = \"\".concat(HourConverter(sunriseHour), \":\").concat(HourConverter(sunriseMinute));\n  var sunsetTime = \"\".concat(HourConverter(sunsetHour), \":\").concat(HourConverter(sunsetMinute));\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Block, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(SvgContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Wind strenght\", __jsx(SVG, {\n    type: \"windIcon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), Math.round(wind * 3.6), \" km/h\")), __jsx(Block, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(SvgContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Sunrise\", __jsx(SVG, {\n    type: \"sunrise\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), \"Local: \", sunriseTime)), __jsx(Block, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(SvgContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Sunset\", __jsx(SVG, {\n    type: \"sunset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }), \"Local: \", sunsetTime)));\n};\n\n_c4 = Useless;\n\nvar HourConverter = function HourConverter(item) {\n  if (item < 10) return \"0\".concat(item);else return item;\n};\n\n_c5 = HourConverter;\n\nvar getItems = function getItems(date, timezone) {\n  var d = new Date(date * 1000);\n  var utc = d.getTime() + d.getTimezoneOffset() * 60000;\n  var string = new Date(utc + 1000 * timezone);\n  var hour = string.getHours();\n  var min = string.getMinutes();\n  return {\n    hour: hour,\n    min: min\n  };\n};\n\nexport default Useless;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"SvgContainer\");\n$RefreshReg$(_c4, \"Useless\");\n$RefreshReg$(_c5, \"HourConverter\");","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/Useless.tsx"],"names":["React","SVG","styled","blockSize","margin","Container","div","Block","SvgContainer","Useless","wind","sunset","sunrise","tz","getItems","sunriseHour","hour","sunriseMinute","min","sunsetHour","sunsetMinute","sunriseTime","HourConverter","sunsetTime","Math","round","item","date","timezone","d","Date","utc","getTime","getTimezoneOffset","string","getHours","getMinutes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport SVG from \"../static/svg/svg\";\r\nimport styled from \"styled-components\";\r\nconst blockSize = 150;\r\nconst margin = 2;\r\nexport const Container = styled.div`\r\n    color: white;\r\n    margin: 0 auto;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nexport const Block = styled.div`\r\n    float: left;\r\n    text-align: center;\r\n    width: ${blockSize + 40}px;\r\n    height: ${blockSize}px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    /* margin: ${margin}px; */\r\n    border-radius: 5px;\r\n    @media (max-width: 800px) {\r\n        width: 140px;\r\n        height: 100px;\r\n        font-size: 0.7rem;\r\n    }\r\n`;\r\nexport const SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    font-size: 1.2rem;\r\n    * {\r\n        margin: 2px 5px;\r\n    }\r\n    svg {\r\n        height: 75px;\r\n        width: 75px;\r\n        fill: white;\r\n    }\r\n    @media (max-width: 600px) {\r\n        font-size: 1.1rem;\r\n\r\n        svg {\r\n            height: 30px;\r\n            width: 30px;\r\n            fill: white;\r\n        }\r\n    }\r\n`;\r\nconst Useless = ({ wind, sunset, sunrise, tz }) => {\r\n    const { hour: sunriseHour, min: sunriseMinute } = getItems(sunrise, tz);\r\n    const { hour: sunsetHour, min: sunsetMinute } = getItems(sunset, tz);\r\n\r\n    const sunriseTime = `${HourConverter(sunriseHour)}:${HourConverter(sunriseMinute)}`;\r\n    const sunsetTime = `${HourConverter(sunsetHour)}:${HourConverter(sunsetMinute)}`;\r\n    return (\r\n        <Container>\r\n            <Block>\r\n                <SvgContainer>\r\n                    Wind strenght\r\n                    <SVG type=\"windIcon\" />\r\n                    {Math.round(wind * 3.6)} km/h\r\n                </SvgContainer>\r\n            </Block>\r\n            <Block>\r\n                <SvgContainer>\r\n                    Sunrise\r\n                    <SVG type=\"sunrise\" />\r\n                    Local: {sunriseTime}\r\n                </SvgContainer>\r\n            </Block>\r\n            <Block>\r\n                <SvgContainer>\r\n                    Sunset\r\n                    <SVG type=\"sunset\" />\r\n                    Local: {sunsetTime}\r\n                </SvgContainer>\r\n            </Block>\r\n        </Container>\r\n    );\r\n};\r\nconst HourConverter = (item: number) => {\r\n    if (item < 10) return `0${item}`;\r\n    else return item;\r\n};\r\nconst getItems = (date: number, timezone: number) => {\r\n    const d = new Date(date * 1000);\r\n\r\n    const utc = d.getTime() + d.getTimezoneOffset() * 60000;\r\n    const string = new Date(utc + 1000 * timezone);\r\n    let hour = string.getHours();\r\n    let min = string.getMinutes();\r\n\r\n    return { hour, min };\r\n};\r\n\r\nexport default Useless;\r\n"]},"metadata":{},"sourceType":"module"}