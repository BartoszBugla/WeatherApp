{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\FavouriteCities.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport SVG from \"../static/svg/svg\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport Link from \"next/link\";\nconst blockSize = 180;\nconst margin = 10;\nconst Container = styled.div.withConfig({\n  displayName: \"FavouriteCities__Container\",\n  componentId: \"qmz0gn-0\"\n})([\"width:100%;color:white;background-color:white;width:\", \"px;overflow:hidden;margin-top:30px;@media (max-width:\", \" px){width:100vw;overflow-x:scroll;}\"], props => {\n  props.size * blockSize + margin * 16 + 1 * 16;\n}, props => {\n  props.size * blockSize + margin * 16 + 1 * 16;\n});\nconst Scroll = styled.section.withConfig({\n  displayName: \"FavouriteCities__Scroll\",\n  componentId: \"qmz0gn-1\"\n})([\"margin:0 100px;max-height:200px;overflow-x:scroll;overflow-y:hidden;display:grid;grid-template-columns:repeat(8,1fr);\"]);\nconst Block = styled.div.withConfig({\n  displayName: \"FavouriteCities__Block\",\n  componentId: \"qmz0gn-2\"\n})([\"float:left;text-align:center;width:\", \"px;height:\", \"px;display:flex;\", \" justify-content:center;flex-direction:column;margin:\", \"px;border-radius:5px;&:focus{width:1000px;}@media (max-width:800px){width:100px;height:100px;font-size:0.7rem;}&:hover{-webkit-filter:brightness(120%);-webkit-transition:all 1s ease;-moz-transition:all 1s ease;-o-transition:all 1s ease;-ms-transition:all 1s ease;transition:all 1s ease;}\"], blockSize + 40, blockSize, props => {\n  if (props.colors) {\n    if (props.colors[2]) return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\n  }\n}, margin);\nconst SvgContainer = styled.div.withConfig({\n  displayName: \"FavouriteCities__SvgContainer\",\n  componentId: \"qmz0gn-3\"\n})([\"display:flex;flex-direction:row;align-items:center;text-align:center;justify-content:center;*{margin:2px 5px;}svg{height:40px;width:40px;fill:white;}\"]);\nconst Header = styled.p.withConfig({\n  displayName: \"FavouriteCities__Header\",\n  componentId: \"qmz0gn-4\"\n})([\"font-size:1.2rem;color:black;margin:0 100px;\"]);\n\nconst FavouriteCities = ({\n  data\n}) => {\n  const items = data.map(i => {\n    const temperature = Math.round(i.weather.main.temp - 273.15);\n    const {\n      colors,\n      name,\n      icon\n    } = ConvertSkies(i.weather.weather[0].description, temperature);\n    const url = `/result?cityName=${i.city}`;\n    return __jsx(Link, {\n      href: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \" \", __jsx(Block, {\n      colors: colors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, i.city), __jsx(SvgContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, __jsx(SVG, {\n      type: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, temperature)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \" \", i.weather.weather[0].description))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Your Liked cities\"), __jsx(Scroll, {\n    size: data.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \" \", items));\n};\n\nexport default FavouriteCities;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/FavouriteCities.tsx"],"names":["React","styled","SVG","ConvertSkies","Link","blockSize","margin","Container","div","props","size","Scroll","section","Block","colors","SvgContainer","Header","p","FavouriteCities","data","items","map","i","temperature","Math","round","weather","main","temp","name","icon","description","url","city","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SVG from \"../static/svg/svg\";\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\nimport Link from \"next/link\";\r\nconst blockSize = 180;\r\nconst margin = 10;\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    color: white;\r\n    background-color: white;\r\n    width: ${(props) => {\r\n        props.size * blockSize + margin * 16 + 1 * 16;\r\n    }}px;\r\n    overflow: hidden;\r\n\r\n    margin-top: 30px;\r\n    @media (max-width: ${(props) => {\r\n            props.size * blockSize + margin * 16 + 1 * 16;\r\n        }} px) {\r\n        width: 100vw;\r\n        overflow-x: scroll;\r\n    }\r\n`;\r\nconst Scroll = styled.section`\r\n    margin: 0 100px;\r\n    max-height: 200px;\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr);\r\n`;\r\nconst Block = styled.div`\r\n    float: left;\r\n    text-align: center;\r\n    width: ${blockSize + 40}px;\r\n    height: ${blockSize}px;\r\n    display: flex;\r\n    ${(props) => {\r\n        if (props.colors) {\r\n            if (props.colors[2])\r\n                return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;\r\n            else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\r\n        }\r\n    }}\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: ${margin}px;\r\n    border-radius: 5px;\r\n    &:focus {\r\n        width: 1000px;\r\n    }\r\n    @media (max-width: 800px) {\r\n        width: 100px;\r\n        height: 100px;\r\n        font-size: 0.7rem;\r\n    }\r\n    &:hover {\r\n        -webkit-filter: brightness(120%);\r\n        -webkit-transition: all 1s ease;\r\n        -moz-transition: all 1s ease;\r\n        -o-transition: all 1s ease;\r\n        -ms-transition: all 1s ease;\r\n        transition: all 1s ease;\r\n    }\r\n`;\r\nconst SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n    * {\r\n        margin: 2px 5px;\r\n    }\r\n    svg {\r\n        height: 40px;\r\n        width: 40px;\r\n        fill: white;\r\n    }\r\n`;\r\nconst Header = styled.p`\r\n    font-size: 1.2rem;\r\n    color: black;\r\n    margin: 0 100px;\r\n`;\r\nconst FavouriteCities = ({ data }) => {\r\n    const items = data.map((i) => {\r\n        const temperature = Math.round(i.weather.main.temp - 273.15);\r\n        const { colors, name, icon } = ConvertSkies(i.weather.weather[0].description, temperature);\r\n        const url = `/result?cityName=${i.city}`;\r\n        return (\r\n            <Link href={url}>\r\n                <a>\r\n                    {\" \"}\r\n                    <Block colors={colors}>\r\n                        <p>{i.city}</p>\r\n                        <SvgContainer>\r\n                            <SVG type={icon} />\r\n                            <p>{temperature}</p>\r\n                        </SvgContainer>\r\n                        <p> {i.weather.weather[0].description}</p>\r\n                    </Block>\r\n                </a>\r\n            </Link>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <Header>Your Liked cities</Header>\r\n            <Scroll size={data.length}> {items}</Scroll>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FavouriteCities;\r\n"]},"metadata":{},"sourceType":"module"}