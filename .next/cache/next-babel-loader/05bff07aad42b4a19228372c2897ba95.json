{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\Block.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport SVG from \"../static/svg/svg\";\nvar blockSize = 180;\nvar margin = 10;\nvar Cont = styled.a.withConfig({\n  displayName: \"Block__Cont\",\n  componentId: \"bq5cpa-0\"\n})([\"float:left;text-align:center;width:\", \"px;height:\", \"px;display:flex;color:white;\", \" justify-content:center;flex-direction:column;margin:\", \"px;border-radius:5px;&:focus{transform:scale(1.1);border-radius:15px;outline:none;}@media (max-width:800px){width:100px;height:100px;font-size:0.7rem;}&:hover{-webkit-filter:brightness(120%);-webkit-transition:all 1s ease;-moz-transition:all 1s ease;-o-transition:all 1s ease;-ms-transition:all 1s ease;transition:all 1s ease;}\"], blockSize + 40, blockSize, function (props) {\n  if (props.colors) {\n    if (props.colors[2]) return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%, \").concat(props.colors[1], \" 50.52%, \").concat(props.colors[2], \" 100%);\");else return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%,  \").concat(props.colors[1], \" 100%);\");\n  }\n}, margin);\n_c = Cont;\nvar SvgContainer = styled.div.withConfig({\n  displayName: \"Block__SvgContainer\",\n  componentId: \"bq5cpa-1\"\n})([\"display:flex;flex-direction:row;align-items:center;text-align:center;justify-content:center;*{margin:2px 5px;}svg{height:40px;width:40px;fill:white;}\"]);\n_c2 = SvgContainer;\nvar apikey1 = process.env.API_KEY_1;\nvar apikey2 = process.env.API_KEY_2;\n\nvar Block = function Block(_ref) {\n  _s();\n\n  var city = _ref.city;\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var url, fetchedCoords, loc, cityName, _loc$DisplayPosition, Latitude, Longitude, url2, fetchedDAta;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=\".concat(apikey1, \"&searchtext=\").concat(city);\n            _context.next = 3;\n            return axios(url);\n\n          case 3:\n            fetchedCoords = _context.sent;\n\n            if (!(fetchedCoords.Response.View[0] == undefined)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              props: {\n                error: \"oops\"\n              }\n            });\n\n          case 6:\n            loc = fetchedCoords.Response.View[0].Result[0].Location;\n            cityName = loc.Address.District ? loc.Address.District : loc.Address.City;\n            _loc$DisplayPosition = loc.DisplayPosition, Latitude = _loc$DisplayPosition.Latitude, Longitude = _loc$DisplayPosition.Longitude;\n            url2 = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(Latitude, \"&lon=\").concat(Longitude, \"&appid=\").concat(apikey2);\n            _context.next = 12;\n            return fetch(url2);\n\n          case 12:\n            fetchedDAta = _context.sent;\n            setData(fetchedDAta);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var temperature = Math.round(data.weather.main.temp - 273.15);\n\n  var _ConvertSkies = ConvertSkies(data.weather.weather[0].description, temperature),\n      colors = _ConvertSkies.colors,\n      name = _ConvertSkies.name,\n      icon = _ConvertSkies.icon;\n\n  var url = \"/result?cityName=\".concat(data.city);\n  if (!data) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, \"Loading\");\n  return __jsx(Link, {\n    href: url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(Cont, {\n    href: \"#\",\n    colors: colors,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, data.city), __jsx(SvgContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(SVG, {\n    type: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, temperature)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \" \", data.weather.weather[0].description)));\n};\n\n_s(Block, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c3 = Block;\nexport default Block;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cont\");\n$RefreshReg$(_c2, \"SvgContainer\");\n$RefreshReg$(_c3, \"Block\");","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/Block.tsx"],"names":["React","useEffect","useState","ConvertSkies","styled","Link","axios","SVG","blockSize","margin","Cont","a","props","colors","SvgContainer","div","apikey1","process","env","API_KEY_1","apikey2","API_KEY_2","Block","city","data","setData","url","fetchedCoords","Response","View","undefined","error","loc","Result","Location","cityName","Address","District","City","DisplayPosition","Latitude","Longitude","url2","fetch","fetchedDAta","temperature","Math","round","weather","main","temp","description","name","icon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\nimport styled from \"styled-components\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport SVG from \"../static/svg/svg\";\r\nconst blockSize = 180;\r\nconst margin = 10;\r\nconst Cont = styled.a`\r\n    float: left;\r\n    text-align: center;\r\n    width: ${blockSize + 40}px;\r\n    height: ${blockSize}px;\r\n    display: flex;\r\n    color: white;\r\n    ${(props) => {\r\n        if (props.colors) {\r\n            if (props.colors[2])\r\n                return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;\r\n            else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\r\n        }\r\n    }}\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: ${margin}px;\r\n    border-radius: 5px;\r\n    &:focus {\r\n        transform: scale(1.1);\r\n        border-radius: 15px;\r\n        outline: none;\r\n    }\r\n    @media (max-width: 800px) {\r\n        width: 100px;\r\n        height: 100px;\r\n        font-size: 0.7rem;\r\n    }\r\n    &:hover {\r\n        -webkit-filter: brightness(120%);\r\n        -webkit-transition: all 1s ease;\r\n        -moz-transition: all 1s ease;\r\n        -o-transition: all 1s ease;\r\n        -ms-transition: all 1s ease;\r\n        transition: all 1s ease;\r\n    }\r\n`;\r\nconst SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n    * {\r\n        margin: 2px 5px;\r\n    }\r\n    svg {\r\n        height: 40px;\r\n        width: 40px;\r\n        fill: white;\r\n    }\r\n`;\r\nconst apikey1 = process.env.API_KEY_1;\r\nconst apikey2 = process.env.API_KEY_2;\r\nconst Block = ({ city }) => {\r\n    const [data, setData] = useState();\r\n    useEffect(async () => {\r\n        const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=${apikey1}&searchtext=${city}`;\r\n        const fetchedCoords = await axios(url);\r\n        if (fetchedCoords.Response.View[0] == undefined) {\r\n            return {\r\n                props: {\r\n                    error: \"oops\",\r\n                },\r\n            };\r\n        }\r\n        const loc = fetchedCoords.Response.View[0].Result[0].Location;\r\n        const cityName = loc.Address.District ? loc.Address.District : loc.Address.City;\r\n        const { Latitude, Longitude } = loc.DisplayPosition;\r\n        const url2 = `http://api.openweathermap.org/data/2.5/weather?lat=${Latitude}&lon=${Longitude}&appid=${apikey2}`;\r\n        const fetchedDAta = await fetch(url2);\r\n        setData(fetchedDAta);\r\n    }, []);\r\n\r\n    const temperature = Math.round(data.weather.main.temp - 273.15);\r\n    const { colors, name, icon } = ConvertSkies(data.weather.weather[0].description, temperature);\r\n    const url = `/result?cityName=${data.city}`;\r\n    if (!data) return <div>Loading</div>;\r\n    return (\r\n        <Link href={url}>\r\n            <Cont href=\"#\" colors={colors}>\r\n                <p>{data.city}</p>\r\n                <SvgContainer>\r\n                    <SVG type={icon} />\r\n                    <p>{temperature}</p>\r\n                </SvgContainer>\r\n                <p> {data.weather.weather[0].description}</p>\r\n            </Cont>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Block;\r\n"]},"metadata":{},"sourceType":"module"}