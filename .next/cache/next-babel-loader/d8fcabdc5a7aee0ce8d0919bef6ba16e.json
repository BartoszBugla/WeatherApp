{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\n\nconst index = ({\n  data,\n  city\n}) => {\n  const temperature = Math.round(data.main.temp - 273.15);\n  const {\n    0: search,\n    1: setSearch\n  } = useState();\n\n  const handleSubmit = e => {\n    e.persist();\n    Router.push({\n      pathname: \"/\",\n      query: {\n        cityName: search\n      }\n    });\n  };\n\n  const handleChange = e => {\n    e.persist();\n    setSearch(e.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Insert City\"), __jsx(\"input\", {\n    value: search,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \" \", city), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \" \", temperature));\n};\n\nexport async function getServerSideProps(ctx) {\n  const queryCity = ctx.query.cityName ? ctx.query.cityName : \"Berlin\";\n  const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=FI0ZPYdRRTTdhdTKQwENNV-OAS4OA13qj97BqtkoU2M&searchtext=${queryCity}`;\n  const fetchedCoords = await (await fetch(url)).json();\n  const {\n    Latitude,\n    Longitude\n  } = fetchedCoords.Response.View[0].Result[0].Location.DisplayPosition;\n  const city = fetchedCoords.Response.View[0].Result[0].Location.Address.Label;\n  console.log(fetchedCoords.Response.View[0].Result[0].Location.Address); // ////////////////////////////////////\n\n  const url2 = `https://api.openweathermap.org/data/2.5/weather?lat=${Latitude}&lon=${Longitude}&appid=ba590e34cd2c5e9d9bfa284e3f0b6a6e`;\n  const data = await (await fetch(url2)).json();\n  return {\n    props: {\n      data,\n      city\n    }\n  };\n}\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/pages/index.tsx"],"names":["React","useState","fetch","Router","index","data","city","temperature","Math","round","main","temp","search","setSearch","handleSubmit","e","persist","push","pathname","query","cityName","handleChange","target","value","getServerSideProps","ctx","queryCity","url","fetchedCoords","json","Latitude","Longitude","Response","View","Result","Location","DisplayPosition","Address","Label","console","log","url2","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Router from \"next/router\";\r\nconst index = ({ data, city }) => {\r\n    const temperature = Math.round(data.main.temp - 273.15);\r\n    const [search, setSearch] = useState();\r\n    const handleSubmit = (e) => {\r\n        e.persist();\r\n        Router.push({\r\n            pathname: \"/\",\r\n            query: { cityName: search },\r\n        });\r\n    };\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        setSearch(e.target.value);\r\n    };\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <p>Insert City</p>\r\n                    <input value={search} onChange={handleChange}></input>\r\n                    <button>Submit</button>\r\n                </label>\r\n            </form>\r\n\r\n            <div> {city}</div>\r\n            <div> {temperature}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    const queryCity = ctx.query.cityName ? ctx.query.cityName : \"Berlin\";\r\n    const url = `https://geocoder.ls.hereapi.com/6.2/geocode.json?apiKey=FI0ZPYdRRTTdhdTKQwENNV-OAS4OA13qj97BqtkoU2M&searchtext=${queryCity}`;\r\n\r\n    const fetchedCoords = await (await fetch(url)).json();\r\n    const { Latitude, Longitude } = fetchedCoords.Response.View[0].Result[0].Location.DisplayPosition;\r\n    const city = fetchedCoords.Response.View[0].Result[0].Location.Address.Label;\r\n    console.log(fetchedCoords.Response.View[0].Result[0].Location.Address);\r\n    // ////////////////////////////////////\r\n\r\n    const url2 = `https://api.openweathermap.org/data/2.5/weather?lat=${Latitude}&lon=${Longitude}&appid=ba590e34cd2c5e9d9bfa284e3f0b6a6e`;\r\n    const data = await (await fetch(url2)).json();\r\n    return { props: { data, city } };\r\n}\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}