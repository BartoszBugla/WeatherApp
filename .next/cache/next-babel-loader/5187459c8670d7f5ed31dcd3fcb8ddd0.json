{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\WeatherBox.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { ConvertDate } from \"../customF/ConvertDate\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport Svg from \"../static/svg/svg\";\nvar Section = styled.section.withConfig({\n  displayName: \"WeatherBox__Section\",\n  componentId: \"sc-13zs880-0\"\n})([\"margin:0 auto;box-shadow:inset 0px -4px 30px rgba(0,0,0,0.35);width:100%;display:flex;flex-direction:column;align-items:center;padding-top:30px;\", \" color:white;flex-grow:1;\"], function (props) {\n  if (props.colors[2]) return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%, \").concat(props.colors[1], \" 50.52%, \").concat(props.colors[2], \" 100%);\");else return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%,  \").concat(props.colors[1], \" 100%);\");\n});\n_c = Section;\nvar Temp = styled.p.withConfig({\n  displayName: \"WeatherBox__Temp\",\n  componentId: \"sc-13zs880-1\"\n})([\"font-size:calc(3rem + 2vw);padding:20px;\"]);\n_c2 = Temp;\nvar City = styled.p.withConfig({\n  displayName: \"WeatherBox__City\",\n  componentId: \"sc-13zs880-2\"\n})([\"font-size:calc(3rem + 2vw);\"]);\n_c3 = City;\nvar Date = styled.p.withConfig({\n  displayName: \"WeatherBox__Date\",\n  componentId: \"sc-13zs880-3\"\n})([\"font-size:1.5rem;color:#e6e2e2;\"]);\n_c4 = Date;\nvar SvgContainer = styled.div.withConfig({\n  displayName: \"WeatherBox__SvgContainer\",\n  componentId: \"sc-13zs880-4\"\n})([\"display:flex;flex-direction:row;align-items:center;flex-wrap:wrap;*{flex:1 1 auto;margin:0 10px;}svg{height:100px;width:100px;fill:white;}\"]);\n_c5 = SvgContainer;\n\nvar Result = function Result(_ref) {\n  var timezone = _ref.timezone,\n      city = _ref.city,\n      temperature = _ref.temperature,\n      sky = _ref.sky,\n      dt = _ref.dt,\n      children = _ref.children;\n\n  var _ConvertSkies = ConvertSkies(sky, temperature),\n      colors = _ConvertSkies.colors,\n      name = _ConvertSkies.name,\n      icon = _ConvertSkies.icon;\n\n  var date = ConvertDate(dt, timezone);\n  return __jsx(Section, {\n    colors: colors,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(City, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, city), __jsx(Date, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, date), __jsx(SvgContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(Svg, {\n    type: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), __jsx(Temp, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, temperature, \"\\xB0\")), children);\n};\n\n_c6 = Result;\nexport default Result;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"Temp\");\n$RefreshReg$(_c3, \"City\");\n$RefreshReg$(_c4, \"Date\");\n$RefreshReg$(_c5, \"SvgContainer\");\n$RefreshReg$(_c6, \"Result\");","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/WeatherBox.tsx"],"names":["React","styled","ConvertDate","ConvertSkies","Svg","Section","section","props","colors","Temp","p","City","Date","SvgContainer","div","Result","timezone","city","temperature","sky","dt","children","name","icon","date"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,IAAMC,OAAO,GAAGJ,MAAM,CAACK,OAAV;AAAA;AAAA;AAAA,sLAQP,UAACC,KAAD,EAAW;AACT,MAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,CAAJ,EACI,qDAA8CD,KAAK,CAACC,MAAN,CAAa,CAAb,CAA9C,kBAAqED,KAAK,CAACC,MAAN,CAAa,CAAb,CAArE,sBAAgGD,KAAK,CAACC,MAAN,CAAa,CAAb,CAAhG,aADJ,KAEK,qDAA8CD,KAAK,CAACC,MAAN,CAAa,CAAb,CAA9C,mBAAsED,KAAK,CAACC,MAAN,CAAa,CAAb,CAAtE;AACR,CAZQ,CAAb;KAAMH,O;AAgBN,IAAMI,IAAI,GAAGR,MAAM,CAACS,CAAV;AAAA;AAAA;AAAA,gDAAV;MAAMD,I;AAIN,IAAME,IAAI,GAAGV,MAAM,CAACS,CAAV;AAAA;AAAA;AAAA,mCAAV;MAAMC,I;AAGN,IAAMC,IAAI,GAAGX,MAAM,CAACS,CAAV;AAAA;AAAA;AAAA,uCAAV;MAAME,I;AAKN,IAAMC,YAAY,GAAGZ,MAAM,CAACa,GAAV;AAAA;AAAA;AAAA,kJAAlB;MAAMD,Y;;AAeN,IAAME,MAAM,GAAG,SAATA,MAAS,OAAwD;AAAA,MAArDC,QAAqD,QAArDA,QAAqD;AAAA,MAA3CC,IAA2C,QAA3CA,IAA2C;AAAA,MAArCC,WAAqC,QAArCA,WAAqC;AAAA,MAAxBC,GAAwB,QAAxBA,GAAwB;AAAA,MAAnBC,EAAmB,QAAnBA,EAAmB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,sBACpClB,YAAY,CAACgB,GAAD,EAAMD,WAAN,CADwB;AAAA,MAC3DV,MAD2D,iBAC3DA,MAD2D;AAAA,MACnDc,IADmD,iBACnDA,IADmD;AAAA,MAC7CC,IAD6C,iBAC7CA,IAD6C;;AAEnE,MAAMC,IAAI,GAAGtB,WAAW,CAACkB,EAAD,EAAKJ,QAAL,CAAxB;AAEA,SACI,MAAC,OAAD;AAAS,IAAA,MAAM,EAAER,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOS,IAAP,CADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOO,IAAP,CAFJ,EAGI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAED,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,WAAP,SAFJ,CAHJ,EAQKG,QARL,CADJ;AAYH,CAhBD;;MAAMN,M;AAkBN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ConvertDate } from \"../customF/ConvertDate\";\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\nimport Svg from \"../static/svg/svg\";\r\n\r\nconst Section = styled.section`\r\n    margin: 0 auto;\r\n    box-shadow: inset 0px -4px 30px rgba(0, 0, 0, 0.35);\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-top: 30px;\r\n    ${(props) => {\r\n        if (props.colors[2])\r\n            return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;\r\n        else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\r\n    }}\r\n    color: white;\r\n    flex-grow: 1;\r\n`;\r\nconst Temp = styled.p`\r\n    font-size: calc(3rem + 2vw);\r\n    padding: 20px;\r\n`;\r\nconst City = styled.p`\r\n    font-size: calc(3rem + 2vw);\r\n`;\r\nconst Date = styled.p`\r\n    font-size: 1.5rem;\r\n    color: #e6e2e2;\r\n`;\r\n\r\nconst SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    * {\r\n        flex: 1 1 auto;\r\n        margin: 0 10px;\r\n    }\r\n    svg {\r\n        height: 100px;\r\n        width: 100px;\r\n        fill: white;\r\n    }\r\n`;\r\nconst Result = ({ timezone, city, temperature, sky, dt, children }) => {\r\n    const { colors, name, icon } = ConvertSkies(sky, temperature);\r\n    const date = ConvertDate(dt, timezone);\r\n\r\n    return (\r\n        <Section colors={colors}>\r\n            <City>{city}</City>\r\n            <Date>{date}</Date>\r\n            <SvgContainer>\r\n                <Svg type={icon} />\r\n                <Temp>{temperature}Â°</Temp>\r\n            </SvgContainer>\r\n            {/* <Skies>{sky}</Skies> */}\r\n            {children}\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default Result;\r\n"]},"metadata":{},"sourceType":"module"}