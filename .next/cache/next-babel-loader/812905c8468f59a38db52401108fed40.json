{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\ActionMenu.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SVG from \"../static/svg/svg\";\nconst Container = styled.div.withConfig({\n  displayName: \"ActionMenu__Container\",\n  componentId: \"xdq1va-0\"\n})([\"width:100vw;height:50px;display:flex;align-items:center;justify-content:center;svg{width:35px;height:35px;padding:2px;path{fill:\", \";stroke:\", \";}}p{padding:2px;}\"], props => props.liked ? \"red\" : \"none\", props => props.liked ? \"red\" : \"white\");\n\nconst ActionMenu = ({\n  city\n}) => {\n  const {\n    0: isLiked,\n    1: setIsLiked\n  } = useState(false);\n  let existing;\n  useEffect(() => {\n    existing = localStorage.getItem(\"likedCities\");\n    existing = existing ? existing.split(\",\") : [];\n    existing.find(element => {\n      return element == city;\n    }) ? setIsLiked(true) : setIsLiked(false);\n  }, [isLiked]);\n\n  const pushLocale = () => {\n    for (let item of existing) {\n      if (item == city) {\n        const index = existing.indexOf(city);\n\n        if (index > -1) {\n          existing.splice(index, 1);\n        }\n\n        setIsLiked(!isLiked);\n        localStorage.setItem(\"likedCities\", existing.toString());\n        return;\n      }\n    }\n\n    existing.push(city);\n    setIsLiked(!isLiked);\n    localStorage.setItem(\"likedCities\", existing.toString());\n  };\n\n  return __jsx(Container, {\n    liked: isLiked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(SVG, {\n    type: \"heart\",\n    onClick: pushLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Like it \"));\n};\n\nexport default ActionMenu;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/ActionMenu.tsx"],"names":["React","useEffect","useState","styled","SVG","Container","div","props","liked","ActionMenu","city","isLiked","setIsLiked","existing","localStorage","getItem","split","find","element","pushLocale","item","index","indexOf","splice","setItem","toString","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAGA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,2KAaMC,KAAD,IAAYA,KAAK,CAACC,KAAN,GAAc,KAAd,GAAsB,MAbvC,EAcQD,KAAD,IAAYA,KAAK,CAACC,KAAN,GAAc,KAAd,GAAsB,OAdzC,CAAf;;AAqBA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIW,QAAJ;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX;AACAF,IAAAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAH,GAAyB,EAA5C;AACAH,IAAAA,QAAQ,CAACI,IAAT,CAAeC,OAAD,IAAa;AACvB,aAAOA,OAAO,IAAIR,IAAlB;AACH,KAFD,IAGME,UAAU,CAAC,IAAD,CAHhB,GAIMA,UAAU,CAAC,KAAD,CAJhB;AAKH,GARQ,EAQN,CAACD,OAAD,CARM,CAAT;;AAUA,QAAMQ,UAAU,GAAG,MAAM;AACrB,SAAK,IAAIC,IAAT,IAAiBP,QAAjB,EAA2B;AACvB,UAAIO,IAAI,IAAIV,IAAZ,EAAkB;AACd,cAAMW,KAAK,GAAGR,QAAQ,CAACS,OAAT,CAAiBZ,IAAjB,CAAd;;AACA,YAAIW,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZR,UAAAA,QAAQ,CAACU,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AACH;;AACDT,QAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAG,QAAAA,YAAY,CAACU,OAAb,CAAqB,aAArB,EAAoCX,QAAQ,CAACY,QAAT,EAApC;AACA;AACH;AACJ;;AACDZ,IAAAA,QAAQ,CAACa,IAAT,CAAchB,IAAd;AACAE,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAEAG,IAAAA,YAAY,CAACU,OAAb,CAAqB,aAArB,EAAoCX,QAAQ,CAACY,QAAT,EAApC;AACH,GAhBD;;AAiBA,SACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEd,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAkB,IAAA,OAAO,EAAEQ,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH,CApCD;;AAsCA,eAAeV,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SVG from \"../static/svg/svg\";\r\nimport { SvgContainer } from \"./Useless\";\r\nimport { type } from \"os\";\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    height: 50px;\r\n    display: flex;\r\n\r\n    align-items: center;\r\n    justify-content: center;\r\n    svg {\r\n        width: 35px;\r\n        height: 35px;\r\n\r\n        padding: 2px;\r\n        path {\r\n            fill: ${(props) => (props.liked ? \"red\" : \"none\")};\r\n            stroke: ${(props) => (props.liked ? \"red\" : \"white\")};\r\n        }\r\n    }\r\n    p {\r\n        padding: 2px;\r\n    }\r\n`;\r\nconst ActionMenu = ({ city }) => {\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    let existing;\r\n    useEffect(() => {\r\n        existing = localStorage.getItem(\"likedCities\");\r\n        existing = existing ? existing.split(\",\") : [];\r\n        existing.find((element) => {\r\n            return element == city;\r\n        })\r\n            ? setIsLiked(true)\r\n            : setIsLiked(false);\r\n    }, [isLiked]);\r\n\r\n    const pushLocale = () => {\r\n        for (let item of existing) {\r\n            if (item == city) {\r\n                const index = existing.indexOf(city);\r\n                if (index > -1) {\r\n                    existing.splice(index, 1);\r\n                }\r\n                setIsLiked(!isLiked);\r\n                localStorage.setItem(\"likedCities\", existing.toString());\r\n                return;\r\n            }\r\n        }\r\n        existing.push(city);\r\n        setIsLiked(!isLiked);\r\n\r\n        localStorage.setItem(\"likedCities\", existing.toString());\r\n    };\r\n    return (\r\n        <Container liked={isLiked}>\r\n            <SVG type=\"heart\" onClick={pushLocale} />\r\n            <p>Like it </p>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ActionMenu;\r\n"]},"metadata":{},"sourceType":"module"}