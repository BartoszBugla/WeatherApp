{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\NewForecast.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport getItems from \"../customF/ConvertDate\";\nimport SVG from \"../static/svg/svg\";\nvar Container = styled.div.withConfig({\n  displayName: \"NewForecast__Container\",\n  componentId: \"t1mylj-0\"\n})([\"width:100%;max-width:100%;display:flex;flex-direction:row;background-color:grey;\"]);\n_c = Container;\nvar Block = styled.div.withConfig({\n  displayName: \"NewForecast__Block\",\n  componentId: \"t1mylj-1\"\n})([\"width:100px;height:100px;\"]);\n_c2 = Block;\n\nvar NewForecast = function NewForecast(_ref) {\n  var forecast = _ref.forecast;\n  var items = forecast.map(function (item, index) {\n    var sky = item.weather[0].description;\n    var temperature = Math.round(item.temp.day - 273.15);\n\n    var _ConvertSkies = ConvertSkies(sky, temperature),\n        colors = _ConvertSkies.colors,\n        name = _ConvertSkies.name,\n        icon = _ConvertSkies.icon;\n\n    var _getItems = getItems(item.dt),\n        weekday = _getItems.weekday;\n\n    return __jsx(Block, {\n      key: index,\n      colors: colors,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, weekday), __jsx(SVG, {\n      type: icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), temperature, \"\\xB0\", sky);\n  });\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, items);\n};\n\n_c3 = NewForecast;\nexport default NewForecast;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"NewForecast\");","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/NewForecast.tsx"],"names":["React","styled","ConvertSkies","getItems","SVG","Container","div","Block","NewForecast","forecast","items","map","item","index","sky","weather","description","temperature","Math","round","temp","day","colors","name","icon","dt","weekday"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,IAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,wFAAf;KAAMD,S;AAON,IAAME,KAAK,GAAGN,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,iCAAX;MAAMC,K;;AAIN,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAClC,MAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACxC,QAAMC,GAAG,GAAGF,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,WAA5B;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACQ,IAAL,CAAUC,GAAV,GAAgB,MAA3B,CAApB;;AAFwC,wBAGTnB,YAAY,CAACY,GAAD,EAAMG,WAAN,CAHH;AAAA,QAGhCK,MAHgC,iBAGhCA,MAHgC;AAAA,QAGxBC,IAHwB,iBAGxBA,IAHwB;AAAA,QAGlBC,IAHkB,iBAGlBA,IAHkB;;AAAA,oBAIpBrB,QAAQ,CAACS,IAAI,CAACa,EAAN,CAJY;AAAA,QAIhCC,OAJgC,aAIhCA,OAJgC;;AAMxC,WACI,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEb,KAAZ;AAAmB,MAAA,MAAM,EAAES,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAII,OAAJ,CADJ,EAEI,MAAC,GAAD;AAAK,MAAA,IAAI,EAAEF,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKP,WAHL,UAGmBH,GAHnB,CADJ;AAOH,GAba,CAAd;AAcA,SAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYJ,KAAZ,CAAP;AACH,CAhBD;;MAAMF,W;AAkBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\nimport getItems from \"../customF/ConvertDate\";\r\nimport SVG from \"../static/svg/svg\";\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    max-width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    background-color: grey;\r\n`;\r\nconst Block = styled.div`\r\n    width: 100px;\r\n    height: 100px;\r\n`;\r\nconst NewForecast = ({ forecast }) => {\r\n    const items = forecast.map((item, index) => {\r\n        const sky = item.weather[0].description;\r\n        const temperature = Math.round(item.temp.day - 273.15);\r\n        const { colors, name, icon } = ConvertSkies(sky, temperature);\r\n        const { weekday } = getItems(item.dt);\r\n\r\n        return (\r\n            <Block key={index} colors={colors}>\r\n                <p>{weekday}</p>\r\n                <SVG type={icon} />\r\n                {temperature}Â°{sky}\r\n            </Block>\r\n        );\r\n    });\r\n    return <Container>{items}</Container>;\r\n};\r\n\r\nexport default NewForecast;\r\n"]},"metadata":{},"sourceType":"module"}