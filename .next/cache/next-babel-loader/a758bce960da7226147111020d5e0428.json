{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\Useless.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Block, Container } from \"./Forecast\";\nimport getItems from \"../customF/ConvertDate\";\n\nconst Useless = ({\n  wind,\n  sunset,\n  sunrise\n}) => {\n  const {\n    hour: sunriseHour,\n    min: sunriseMinute\n  } = getItems(sunrise);\n  const {\n    hour: sunsetHour,\n    min: sunsetsunsetMinute\n  } = getItems(sunset);\n  const sunriseTime = `${HourConverter(sunriseHour)}:${HourConverter(sunriseMinute)}`;\n  const sunsetTime = `${HourConverter(sunsetHour)}:${HourConverter(sunsetMinute)}`;\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Block, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, wind), __jsx(Block, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, sunriseTime), __jsx(Block, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, sunsetTime));\n};\n\nconst HourConverter = item => {\n  if (item < 10) return `0${item}`;else return item;\n};\n\nexport default Useless;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/Useless.tsx"],"names":["React","Block","Container","getItems","Useless","wind","sunset","sunrise","hour","sunriseHour","min","sunriseMinute","sunsetHour","sunsetsunsetMinute","sunriseTime","HourConverter","sunsetTime","sunsetMinute","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA,GAAG,EAAEC;AAA1B,MAA4CR,QAAQ,CAACI,OAAD,CAA1D;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEI,UAAR;AAAoBF,IAAAA,GAAG,EAAEG;AAAzB,MAAgDV,QAAQ,CAACG,MAAD,CAA9D;AAEA,QAAMQ,WAAW,GAAI,GAAEC,aAAa,CAACN,WAAD,CAAc,IAAGM,aAAa,CAACJ,aAAD,CAAgB,EAAlF;AACA,QAAMK,UAAU,GAAI,GAAED,aAAa,CAACH,UAAD,CAAa,IAAGG,aAAa,CAACE,YAAD,CAAe,EAA/E;AACA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQZ,IAAR,CADJ,EAEI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQS,WAAR,CAFJ,EAGI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQE,UAAR,CAHJ,CADJ;AAOH,CAbD;;AAcA,MAAMD,aAAa,GAAIG,IAAD,IAAU;AAC5B,MAAIA,IAAI,GAAG,EAAX,EAAe,OAAQ,IAAGA,IAAK,EAAhB,CAAf,KACK,OAAOA,IAAP;AACR,CAHD;;AAKA,eAAed,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Block, Container } from \"./Forecast\";\r\nimport getItems from \"../customF/ConvertDate\";\r\n\r\nconst Useless = ({ wind, sunset, sunrise }) => {\r\n    const { hour: sunriseHour, min: sunriseMinute } = getItems(sunrise);\r\n    const { hour: sunsetHour, min: sunsetsunsetMinute } = getItems(sunset);\r\n\r\n    const sunriseTime = `${HourConverter(sunriseHour)}:${HourConverter(sunriseMinute)}`;\r\n    const sunsetTime = `${HourConverter(sunsetHour)}:${HourConverter(sunsetMinute)}`;\r\n    return (\r\n        <Container>\r\n            <Block>{wind}</Block>\r\n            <Block>{sunriseTime}</Block>\r\n            <Block>{sunsetTime}</Block>\r\n        </Container>\r\n    );\r\n};\r\nconst HourConverter = (item) => {\r\n    if (item < 10) return `0${item}`;\r\n    else return item;\r\n};\r\n\r\nexport default Useless;\r\n"]},"metadata":{},"sourceType":"module"}