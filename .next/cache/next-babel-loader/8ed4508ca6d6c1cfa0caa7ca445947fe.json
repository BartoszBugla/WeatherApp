{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\Forecast.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport SVG from \"../static/svg/svg\";\nimport { getItems } from \"../customF/ConvertDate\";\nconst Container = styled.div.withConfig({\n  displayName: \"Forecast__Container\",\n  componentId: \"sc-17es5hb-0\"\n})([\"display:flex;flex-direction:row;margin-top:50px;flex-wrap:wrap;align-items:center;\"]);\nconst Block = styled.div.withConfig({\n  displayName: \"Forecast__Block\",\n  componentId: \"sc-17es5hb-1\"\n})([\"width:150px;height:150px;border:white solid 1px;display:flex;flex-direction:column;align-items:center;justify-content:center;\"]);\nconst Temp = styled.p.withConfig({\n  displayName: \"Forecast__Temp\",\n  componentId: \"sc-17es5hb-2\"\n})([\"font-size:2.5rem;\"]);\nconst SvgContainer = styled.div.withConfig({\n  displayName: \"Forecast__SvgContainer\",\n  componentId: \"sc-17es5hb-3\"\n})([\"display:flex;flex-direction:column;align-items:center;*{margin:0 5px;}svg{height:40px;width:40px;fill:white;}\"]);\n\nconst Forecast = ({\n  forecast = []\n}) => {\n  const items = forecast.map(item => {\n    const sky = item.weather[0].description;\n    const temperature = Math.round(item.temp.day - 273.15);\n    const {\n      colors,\n      name,\n      icon\n    } = ConvertSkies(sky, temperature);\n    const {\n      weekday\n    } = getItems(item.dt);\n    console.log(item);\n    return __jsx(Block, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, weekday), __jsx(Temp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, temperature, \"\\xB0\"), __jsx(SvgContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, __jsx(SVG, {\n      type: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, sky)));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }, items);\n};\n\nexport default Forecast;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/Forecast.tsx"],"names":["React","styled","ConvertSkies","SVG","getItems","Container","div","Block","Temp","p","SvgContainer","Forecast","forecast","items","map","item","sky","weather","description","temperature","Math","round","temp","day","colors","name","icon","weekday","dt","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,0FAAf;AASA,MAAMC,KAAK,GAAGN,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,qIAAX;AASA,MAAME,IAAI,GAAGP,MAAM,CAACQ,CAAV;AAAA;AAAA;AAAA,yBAAV;AAGA,MAAMC,YAAY,GAAGT,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,qHAAlB;;AAcA,MAAMK,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAQ,GAAG;AAAb,CAAD,KAAuB;AACpC,QAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,CAAcC,IAAD,IAAU;AACjC,UAAMC,GAAG,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,WAA5B;AACA,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACO,IAAL,CAAUC,GAAV,GAAgB,MAA3B,CAApB;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,IAAV;AAAgBC,MAAAA;AAAhB,QAAyBxB,YAAY,CAACc,GAAD,EAAMG,WAAN,CAA3C;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAcvB,QAAQ,CAACW,IAAI,CAACa,EAAN,CAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACA,WACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIY,OAAJ,CADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,WAAP,SAFJ,EAGI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,GAAD;AAAK,MAAA,IAAI,EAAEO,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIV,GAAJ,CAFJ,CAHJ,CADJ;AAUH,GAhBa,CAAd;AAiBA,SAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYH,KAAZ,CAAP;AACH,CAnBD;;AAqBA,eAAeF,QAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\n\r\nimport SVG from \"../static/svg/svg\";\r\nimport { getItems } from \"../customF/ConvertDate\";\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 50px;\r\n    /* max-width: 100vw; */\r\n    /* overflow-x: hidden; */\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n`;\r\nconst Block = styled.div`\r\n    width: 150px;\r\n    height: 150px;\r\n    border: white solid 1px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\nconst Temp = styled.p`\r\n    font-size: 2.5rem;\r\n`;\r\nconst SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    * {\r\n        margin: 0 5px;\r\n    }\r\n    svg {\r\n        height: 40px;\r\n        width: 40px;\r\n        fill: white;\r\n    }\r\n`;\r\n\r\nconst Forecast = ({ forecast = [] }) => {\r\n    const items = forecast.map((item) => {\r\n        const sky = item.weather[0].description;\r\n        const temperature = Math.round(item.temp.day - 273.15);\r\n        const { colors, name, icon } = ConvertSkies(sky, temperature);\r\n        const { weekday } = getItems(item.dt);\r\n        console.log(item);\r\n        return (\r\n            <Block>\r\n                <p>{weekday}</p>\r\n                <Temp>{temperature}Â°</Temp>\r\n                <SvgContainer>\r\n                    <SVG type={icon} />\r\n                    <p>{sky}</p>\r\n                </SvgContainer>\r\n            </Block>\r\n        );\r\n    });\r\n    return <Container>{items}</Container>;\r\n};\r\n\r\nexport default Forecast;\r\n"]},"metadata":{},"sourceType":"module"}