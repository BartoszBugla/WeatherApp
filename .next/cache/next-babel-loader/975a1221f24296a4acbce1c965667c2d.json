{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\weatherApp\\\\components\\\\Forecast.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport ConvertSkies from \"../customF/ConvertSkies\";\nimport SVG from \"../static/svg/svg\";\nimport getItems from \"../customF/ConvertDate\";\nexport var Container = styled.div.withConfig({\n  displayName: \"Forecast__Container\",\n  componentId: \"sc-17es5hb-0\"\n})([\"display:flex;flex-direction:row;margin:1vw 1vw 1vw 1vw;flex-wrap:wrap;align-items:center;justify-content:center;\"]);\n_c = Container;\nexport var Block = styled.div.withConfig({\n  displayName: \"Forecast__Block\",\n  componentId: \"sc-17es5hb-1\"\n})([\"width:160px;height:160px;\", \" display:flex;flex-direction:column;align-items:center;justify-content:center;margin:5px;border-radius:10px;\", \" @media (max-width:600px){width:120px;height:120px;}\"], function (props) {\n  return props.border ? \"border:solid 1px white;\" : \"\";\n}, function (props) {\n  if (props.colors) {\n    if (props.colors[2]) return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%, \").concat(props.colors[1], \" 50.52%, \").concat(props.colors[2], \" 100%);\");else return \"background: linear-gradient(180deg, \".concat(props.colors[0], \" 0%,  \").concat(props.colors[1], \" 100%);\");\n  }\n});\n_c2 = Block;\nvar Temp = styled.p.withConfig({\n  displayName: \"Forecast__Temp\",\n  componentId: \"sc-17es5hb-2\"\n})([\"font-size:2.5rem;@media (max-width:600px){font-size:1rem;}\"]);\n_c3 = Temp;\nvar Sky = styled.p.withConfig({\n  displayName: \"Forecast__Sky\",\n  componentId: \"sc-17es5hb-3\"\n})([\"font-size:1.5rem;@media (max-width:600px){font-size:1rem;}\"]);\n_c4 = Sky;\nexport var SvgContainer = styled.div.withConfig({\n  displayName: \"Forecast__SvgContainer\",\n  componentId: \"sc-17es5hb-4\"\n})([\"display:flex;flex-direction:column;align-items:center;text-align:center;*{margin:2px 5px;}svg{height:40px;width:40px;fill:white;}@media (max-width:600px){font-size:2rem;*{margin:1px 2px;}svg{height:30px;width:30px;fill:white;}}\"]);\n_c5 = SvgContainer;\n\nvar Forecast = function Forecast(_ref) {\n  var _ref$forecast = _ref.forecast,\n      forecast = _ref$forecast === void 0 ? [] : _ref$forecast;\n  var items = forecast.map(function (item, index) {\n    var sky = item.weather[0].description;\n    var temperature = Math.round(item.temp.day - 273.15);\n\n    var _ConvertSkies = ConvertSkies(sky, temperature),\n        colors = _ConvertSkies.colors,\n        name = _ConvertSkies.name,\n        icon = _ConvertSkies.icon;\n\n    var _getItems = getItems(item.dt),\n        weekday = _getItems.weekday;\n\n    return __jsx(Block, {\n      border: true,\n      key: index,\n      colors: colors,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, weekday), __jsx(Temp, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, temperature, \"\\xB0\"), __jsx(SvgContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, __jsx(SVG, {\n      type: icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), __jsx(Sky, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, sky)));\n  });\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }\n  }, items);\n};\n\n_c6 = Forecast;\nexport default Forecast;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"Temp\");\n$RefreshReg$(_c4, \"Sky\");\n$RefreshReg$(_c5, \"SvgContainer\");\n$RefreshReg$(_c6, \"Forecast\");","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/weatherApp/components/Forecast.tsx"],"names":["React","styled","ConvertSkies","SVG","getItems","Container","div","Block","props","border","colors","Temp","p","Sky","SvgContainer","Forecast","forecast","items","map","item","index","sky","weather","description","temperature","Math","round","temp","day","name","icon","dt","weekday"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ConvertSkies from \"../customF/ConvertSkies\";\r\n\r\nimport SVG from \"../static/svg/svg\";\r\nimport getItems from \"../customF/ConvertDate\";\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 1vw 1vw 1vw 1vw;\r\n    /* max-width: 100vw; */\r\n    /* overflow-x: hidden; */\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\nexport const Block = styled.div`\r\n    width: 160px;\r\n    height: 160px;\r\n    ${(props) => (props.border ? \"border:solid 1px white;\" : \"\")}\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 5px;\r\n    border-radius: 10px;\r\n    ${(props) => {\r\n        if (props.colors) {\r\n            if (props.colors[2])\r\n                return `background: linear-gradient(180deg, ${props.colors[0]} 0%, ${props.colors[1]} 50.52%, ${props.colors[2]} 100%);`;\r\n            else return `background: linear-gradient(180deg, ${props.colors[0]} 0%,  ${props.colors[1]} 100%);`;\r\n        }\r\n    }}\r\n    @media (max-width: 600px) {\r\n        width: 120px;\r\n        height: 120px;\r\n    }\r\n`;\r\nconst Temp = styled.p`\r\n    font-size: 2.5rem;\r\n    @media (max-width: 600px) {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\nconst Sky = styled.p`\r\n    font-size: 1.5rem;\r\n    @media (max-width: 600px) {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\nexport const SvgContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    * {\r\n        margin: 2px 5px;\r\n    }\r\n    svg {\r\n        height: 40px;\r\n        width: 40px;\r\n        fill: white;\r\n    }\r\n    @media (max-width: 600px) {\r\n        font-size: 2rem;\r\n        * {\r\n            margin: 1px 2px;\r\n        }\r\n        svg {\r\n            height: 30px;\r\n            width: 30px;\r\n            fill: white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Forecast = ({ forecast = [] }) => {\r\n    const items = forecast.map((item, index) => {\r\n        const sky = item.weather[0].description;\r\n        const temperature = Math.round(item.temp.day - 273.15);\r\n        const { colors, name, icon } = ConvertSkies(sky, temperature);\r\n        const { weekday } = getItems(item.dt);\r\n\r\n        return (\r\n            <Block border key={index} colors={colors}>\r\n                <p>{weekday}</p>\r\n                <Temp>{temperature}Â°</Temp>\r\n                <SvgContainer>\r\n                    <SVG type={icon} />\r\n                    <Sky>{sky}</Sky>\r\n                </SvgContainer>\r\n            </Block>\r\n        );\r\n    });\r\n    return <Container>{items}</Container>;\r\n};\r\n\r\nexport default Forecast;\r\n"]},"metadata":{},"sourceType":"module"}